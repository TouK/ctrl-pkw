buildscript {
    ext {
        springBootVersion = '1.2.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
    configurations {
        compile.exclude module: "spring-boot-starter-tomcat"
    }
}

apply plugin: 'eclipse'
apply plugin: 'groovy'
apply plugin: 'spring-boot'


run {
    jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005']
}


jar {
    baseName = 'ctrl-pkw'
    version = '0.0.1-SNAPSHOT'
    into ("resources") {
        from ("${projectDir}/src/main/webapp/") {
            include "**"
        }
    }
    manifest {
        attributes(
                "Specification-Version": version,
                "Specification-Title" : "Ctrl-PKW"
        )
    }
}

tasks.withType(Tar){
    compression = Compression.GZIP
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "http://download.osgeo.org/webdav/geotools" }
    maven { url "http://www.hibernatespatial.org/repository" }
    //maven { url "http://repo.opengeo.org" }
    maven { url "http://dev.mapfish.org/maven/repository/" }
    maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
}

configurations {
    ivy
}

dependencies {
    compile("com.google.guava:guava:18.0")
    compile("org.projectlombok:lombok:1.14.8")

    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-undertow")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-jersey")
    compile("org.springframework.boot:spring-boot-starter-batch")
    compile("org.springframework:spring-context-support")
    compile("org.springframework.shell:spring-shell:1.1.0.RELEASE")
    compile("org.springframework.plugin:spring-plugin-core:1.1.0.RELEASE")
    compile("org.apache.commons:commons-lang3:3.3.2")

    compile('org.glassfish.jersey.ext:jersey-declarative-linking:2.16-SNAPSHOT')
    compile('org.glassfish.jersey.ext:jersey-spring3:2.16-SNAPSHOT')
    //compile('org.glassfish.jersey.ext:jersey-declarative-linking:2.15')
    compile('org.glassfish.jersey.ext:jersey-bean-validation:2.15')
    compile("com.fasterxml.jackson.datatype:jackson-datatype-joda:2.3.2")

    compile("org.opengeo:geodb:0.7")
    compile("com.h2database:h2:1.4.185")
    compile("org.hibernate:hibernate-spatial:4.3")
    compile("org.jadira.usertype:usertype.core:3.2.0.GA")

    compile("com.datastax.cassandra:cassandra-driver-core:2.1.3")
    compile("com.datastax.cassandra:cassandra-driver-mapping:2.1.3")
    
    compile("com.cloudinary:cloudinary-http42:1.1.3")
    compile("com.stormpath.spring:spring-boot-starter-stormpath:1.0.RC4")
    compile("com.stormpath.sdk:stormpath-servlet-plugin:1.0.RC4")
    compile("com.stormpath.spring:spring-boot-starter-stormpath-thymeleaf:1.0.RC4")

    compile "org.springframework.data:spring-data-redis:1.4.1.RELEASE"
    compile "redis.clients:jedis:2.6.1"

    compile("org.webjars:swagger-ui:2.1.8-M1")
    compile("com.wordnik:swagger-jersey2-jaxrs_2.11:1.3.12")

    compile("org.apache.maven:maven-artifact:3.0.3")


    testCompile("junit:junit:4.12")
    //testCompile("org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-bundle:2.13")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.assertj:assertj-core:1.7.0")

    testCompile("org.springframework.batch:spring-batch-test")

    compile 'org.codehaus.groovy:groovy-all:2.4.1'

    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'

    ivy "org.apache.ivy:ivy:2.3.0"

    testCompile("org.cassandraunit:cassandra-unit:2.0.2.2") {
        exclude group: 'com.datastax.cassandra'
        exclude group: 'org.slf4j'
    }
    
    //compile("com.nimbusds:nimbus-jose-jwt:2.10.1")
}

tasks.withType(GroovyCompile) {
    groovyClasspath += configurations.ivy
}
